use borsh::{BorshDeserialize, BorshSerialize};
use solana_program::pubkey::Pubkey;
use substreams_solana::block_view::InstructionView;

use common::accounts;

accounts!(
    InitializeConfigAccounts,
    get_initialize_config_accounts,
    {
        config,
        funder,
        system_program,
    }
);

accounts!(
    InitializePoolAccounts,
    get_initialize_pool_accounts,
    {
        whirlpools_config,
        token_mint_a,
        token_mint_b,
        funder,
        whirlpool,
        token_vault_a,
        token_vault_b,
        fee_tier,
        token_program,
        system_program,
        rent,
    }
);

accounts!(
    InitializeTickArrayAccounts,
    get_initialize_tick_array_accounts,
    {
        whirlpool,
        funder,
        tick_array,
        system_program,
    }
);

accounts!(
    InitializeFeeTierAccounts,
    get_initialize_fee_tier_accounts,
    {
        config,
        fee_tier,
        funder,
        fee_authority,
        system_program,
    }
);

accounts!(
    InitializeRewardAccounts,
    get_initialize_reward_accounts,
    {
        reward_authority,
        funder,
        whirlpool,
        reward_mint,
        reward_vault,
        token_program,
        system_program,
        rent,
    }
);

accounts!(
    SetRewardEmissionsAccounts,
    get_set_reward_emissions_accounts,
    {
        whirlpool,
        reward_authority,
        reward_vault,
    }
);

accounts!(
    OpenPositionAccounts,
    get_open_position_accounts,
    {
        funder,
        owner,
        position,
        position_mint,
        position_token_account,
        whirlpool,
        token_program,
        system_program,
        rent,
        associated_token_program,
    }
);

accounts!(
    OpenPositionWithMetadataAccounts,
    get_open_position_with_metadata_accounts,
    {
        funder,
        owner,
        position,
        position_mint,
        position_metadata_account,
        position_token_account,
        whirlpool,
        token_program,
        system_program,
        rent,
        associated_token_program,
        metadata_program,
        metadata_update_auth,
    }
);

accounts!(
    IncreaseLiquidityAccounts,
    get_increase_liquidity_accounts,
    {
        whirlpool,
        token_program,
        position_authority,
        position,
        position_token_account,
        token_owner_account_a,
        token_owner_account_b,
        token_vault_a,
        token_vault_b,
        tick_array_lower,
        tick_array_upper,
    }
);

accounts!(
    DecreaseLiquidityAccounts,
    get_decrease_liquidity_accounts,
    {
        whirlpool,
        token_program,
        position_authority,
        position,
        position_token_account,
        token_owner_account_a,
        token_owner_account_b,
        token_vault_a,
        token_vault_b,
        tick_array_lower,
        tick_array_upper,
    }
);

accounts!(
    UpdateFeesAndRewardsAccounts,
    get_update_fees_and_rewards_accounts,
    {
        whirlpool,
        position,
        tick_array_lower,
        tick_array_upper,
    }
);

accounts!(
    CollectFeesAccounts,
    get_collect_fees_accounts,
    {
        whirlpool,
        position_authority,
        position,
        position_token_account,
        token_owner_account_a,
        token_vault_a,
        token_owner_account_b,
        token_vault_b,
        token_program,
    }
);

accounts!(
    CollectRewardAccounts,
    get_collect_reward_accounts,
    {
        whirlpool,
        position_authority,
        position,
        position_token_account,
        reward_owner_account,
        reward_vault,
        token_program,
    }
);

accounts!(
    CollectProtocolFeesAccounts,
    get_collect_protocol_fees_accounts,
    {
        whirlpools_config,
        whirlpool,
        collect_protocol_fees_authority,
        token_vault_a,
        token_vault_b,
        token_destination_a,
        token_destination_b,
        token_program,
    }
);

accounts!(
    SwapAccounts,
    get_swap_accounts,
    {
        token_program,
        token_authority,
        whirlpool,
        token_owner_account_a,
        token_vault_a,
        token_owner_account_b,
        token_vault_b,
        tick_array0,
        tick_array1,
        tick_array2,
        oracle,
    }
);

accounts!(
    ClosePositionAccounts,
    get_close_position_accounts,
    {
        position_authority,
        receiver,
        position,
        position_mint,
        position_token_account,
        token_program,
    }
);

accounts!(
    SetDefaultFeeRateAccounts,
    get_set_default_fee_rate_accounts,
    {
        whirlpools_config,
        fee_tier,
        fee_authority,
    }
);

accounts!(
    SetDefaultProtocolFeeRateAccounts,
    get_set_default_protocol_fee_rate_accounts,
    {
        whirlpools_config,
        fee_authority,
    }
);

accounts!(
    SetFeeRateAccounts,
    get_set_fee_rate_accounts,
    {
        whirlpools_config,
        whirlpool,
        fee_authority,
    }
);

accounts!(
    SetProtocolFeeRateAccounts,
    get_set_protocol_fee_rate_accounts,
    {
        whirlpools_config,
        whirlpool,
        fee_authority,
    }
);

accounts!(
    SetFeeAuthorityAccounts,
    get_set_fee_authority_accounts,
    {
        whirlpools_config,
        fee_authority,
        new_fee_authority,
    }
);

accounts!(
    SetCollectProtocolFeesAuthorityAccounts,
    get_set_collect_protocol_fees_authority_accounts,
    {
        whirlpools_config,
        collect_protocol_fees_authority,
        new_collect_protocol_fees_authority,
    }
);

accounts!(
    SetRewardAuthorityAccounts,
    get_set_reward_authority_accounts,
    {
        whirlpool,
        reward_authority,
        new_reward_authority,
    }
);

accounts!(
    SetRewardAuthorityBySuperAuthorityAccounts,
    get_set_reward_authority_by_super_authority_accounts,
    {
        whirlpools_config,
        whirlpool,
        reward_emissions_super_authority,
        new_reward_authority,
    }
);

accounts!(
    SetRewardEmissionsSuperAuthorityAccounts,
    get_set_reward_emissions_super_authority_accounts,
    {
        whirlpools_config,
        reward_emissions_super_authority,
        new_reward_emissions_super_authority,
    }
);

accounts!(
    TwoHopSwapAccounts,
    get_two_hop_swap_accounts,
    {
        token_program,
        token_authority,
        whirlpool_one,
        whirlpool_two,
        token_owner_account_one_a,
        token_vault_one_a,
        token_owner_account_one_b,
        token_vault_one_b,
        token_owner_account_two_a,
        token_vault_two_a,
        token_owner_account_two_b,
        token_vault_two_b,
        tick_array_one0,
        tick_array_one1,
        tick_array_one2,
        tick_array_two0,
        tick_array_two1,
        tick_array_two2,
        oracle_one,
        oracle_two,
    }
);

accounts!(
    InitializePositionBundleAccounts,
    get_initialize_position_bundle_accounts,
    {
        position_bundle,
        position_bundle_mint,
        position_bundle_token_account,
        position_bundle_owner,
        funder,
        token_program,
        system_program,
        rent,
        associated_token_program,
    }
);

accounts!(
    InitializePositionBundleWithMetadataAccounts,
    get_initialize_position_bundle_with_metadata_accounts,
    {
        position_bundle,
        position_bundle_mint,
        position_bundle_metadata,
        position_bundle_token_account,
        position_bundle_owner,
        funder,
        metadata_update_auth,
        token_program,
        system_program,
        rent,
        associated_token_program,
        metadata_program,
    }
);

accounts!(
    DeletePositionBundleAccounts,
    get_delete_position_bundle_accounts,
    {
        position_bundle,
        position_bundle_mint,
        position_bundle_token_account,
        position_bundle_owner,
        receiver,
        token_program,
    }
);

accounts!(
    OpenBundledPositionAccounts,
    get_open_bundled_position_accounts,
    {
        bundled_position,
        position_bundle,
        position_bundle_token_account,
        position_bundle_authority,
        whirlpool,
        funder,
        system_program,
        rent,
    }
);

accounts!(
    CloseBundledPositionAccounts,
    get_close_bundled_position_accounts,
    {
        bundled_position,
        position_bundle,
        position_bundle_token_account,
        position_bundle_authority,
        receiver,
    }
);

accounts!(
    OpenPositionWithTokenExtensionsAccounts,
    get_open_position_with_token_extensions_accounts,
    {
        funder,
        owner,
        position,
        position_mint,
        position_token_account,
        whirlpool,
        token2022_program,
        system_program,
        associated_token_program,
        metadata_update_auth,
    }
);

accounts!(
    ClosePositionWithTokenExtensionsAccounts,
    get_close_position_with_token_extensions_accounts,
    {
        position_authority,
        receiver,
        position,
        position_mint,
        position_token_account,
        token2022_program,
    }
);

accounts!(
    LockPositionAccounts,
    get_lock_position_accounts,
    {
        funder,
        position_authority,
        position,
        position_mint,
        position_token_account,
        lock_config,
        whirlpool,
        token2022_program,
        system_program,
    }
);

accounts!(
    ResetPositionRangeAccounts,
    get_reset_position_range_accounts,
    {
        funder,
        position_authority,
        whirlpool,
        position,
        position_token_account,
        system_program,
    }
);

accounts!(
    TransferLockedPositionAccounts,
    get_transfer_locked_position_accounts,
    {
        position_authority,
        receiver,
        position,
        position_mint,
        position_token_account,
        destination_token_account,
        lock_config,
        token2022_program,
    }
);

accounts!(
    InitializeAdaptiveFeeTierAccounts,
    get_initialize_adaptive_fee_tier_accounts,
    {
        whirlpools_config,
        adaptive_fee_tier,
        funder,
        fee_authority,
        system_program,
    }
);

accounts!(
    SetDefaultBaseFeeRateAccounts,
    get_set_default_base_fee_rate_accounts,
    {
        whirlpools_config,
        adaptive_fee_tier,
        fee_authority,
    }
);

accounts!(
    SetDelegatedFeeAuthorityAccounts,
    get_set_delegated_fee_authority_accounts,
    {
        whirlpools_config,
        adaptive_fee_tier,
        fee_authority,
        new_delegated_fee_authority,
    }
);

accounts!(
    SetInitializePoolAuthorityAccounts,
    get_set_initialize_pool_authority_accounts,
    {
        whirlpools_config,
        adaptive_fee_tier,
        fee_authority,
        new_initialize_pool_authority,
    }
);

accounts!(
    SetPresetAdaptiveFeeConstantsAccounts,
    get_set_preset_adaptive_fee_constants_accounts,
    {
        whirlpools_config,
        adaptive_fee_tier,
        fee_authority,
    }
);

accounts!(
    InitializePoolWithAdaptiveFeeAccounts,
    get_initialize_pool_with_adaptive_fee_accounts,
    {
        whirlpools_config,
        token_mint_a,
        token_mint_b,
        token_badge_a,
        token_badge_b,
        funder,
        initialize_pool_authority,
        whirlpool,
        oracle,
        token_vault_a,
        token_vault_b,
        adaptive_fee_tier,
        token_program_a,
        token_program_b,
        system_program,
        rent,
    }
);

accounts!(
    SetFeeRateByDelegatedFeeAuthorityAccounts,
    get_set_fee_rate_by_delegated_fee_authority_accounts,
    {
        whirlpool,
        adaptive_fee_tier,
        delegated_fee_authority,
    }
);

accounts!(
    CollectFeesV2Accounts,
    get_collect_fees_v2_accounts,
    {
        whirlpool,
        position_authority,
        position,
        position_token_account,
        token_mint_a,
        token_mint_b,
        token_owner_account_a,
        token_vault_a,
        token_owner_account_b,
        token_vault_b,
        token_program_a,
        token_program_b,
        memo_program,
    }
);

accounts!(
    CollectProtocolFeesV2Accounts,
    get_collect_protocol_fees_v2_accounts,
    {
        whirlpools_config,
        whirlpool,
        collect_protocol_fees_authority,
        token_mint_a,
        token_mint_b,
        token_vault_a,
        token_vault_b,
        token_destination_a,
        token_destination_b,
        token_program_a,
        token_program_b,
        memo_program,
    }
);

accounts!(
    CollectRewardV2Accounts,
    get_collect_reward_v2_accounts,
    {
        whirlpool,
        position_authority,
        position,
        position_token_account,
        reward_owner_account,
        reward_mint,
        reward_vault,
        reward_token_program,
        memo_program,
    }
);

accounts!(
    DecreaseLiquidityV2Accounts,
    get_decrease_liquidity_v2_accounts,
    {
        whirlpool,
        token_program_a,
        token_program_b,
        memo_program,
        position_authority,
        position,
        position_token_account,
        token_mint_a,
        token_mint_b,
        token_owner_account_a,
        token_owner_account_b,
        token_vault_a,
        token_vault_b,
        tick_array_lower,
        tick_array_upper,
    }
);

accounts!(
    IncreaseLiquidityV2Accounts,
    get_increase_liquidity_v2_accounts,
    {
        whirlpool,
        token_program_a,
        token_program_b,
        memo_program,
        position_authority,
        position,
        position_token_account,
        token_mint_a,
        token_mint_b,
        token_owner_account_a,
        token_owner_account_b,
        token_vault_a,
        token_vault_b,
        tick_array_lower,
        tick_array_upper,
    }
);

accounts!(
    InitializePoolV2Accounts,
    get_initialize_pool_v2_accounts,
    {
        whirlpools_config,
        token_mint_a,
        token_mint_b,
        token_badge_a,
        token_badge_b,
        funder,
        whirlpool,
        token_vault_a,
        token_vault_b,
        fee_tier,
        token_program_a,
        token_program_b,
        system_program,
        rent,
    }
);

accounts!(
    InitializeRewardV2Accounts,
    get_initialize_reward_v2_accounts,
    {
        reward_authority,
        funder,
        whirlpool,
        reward_mint,
        reward_token_badge,
        reward_vault,
        reward_token_program,
        system_program,
        rent,
    }
);

accounts!(
    SetRewardEmissionsV2Accounts,
    get_set_reward_emissions_v2_accounts,
    {
        whirlpool,
        reward_authority,
        reward_vault,
    }
);

accounts!(
    SwapV2Accounts,
    get_swap_v2_accounts,
    {
        token_program_a,
        token_program_b,
        memo_program,
        token_authority,
        whirlpool,
        token_mint_a,
        token_mint_b,
        token_owner_account_a,
        token_vault_a,
        token_owner_account_b,
        token_vault_b,
        tick_array0,
        tick_array1,
        tick_array2,
        oracle,
    }
);

accounts!(
    TwoHopSwapV2Accounts,
    get_two_hop_swap_v2_accounts,
    {
        whirlpool_one,
        whirlpool_two,
        token_mint_input,
        token_mint_intermediate,
        token_mint_output,
        token_program_input,
        token_program_intermediate,
        token_program_output,
        token_owner_account_input,
        token_vault_one_input,
        token_vault_one_intermediate,
        token_vault_two_intermediate,
        token_vault_two_output,
        token_owner_account_output,
        token_authority,
        tick_array_one0,
        tick_array_one1,
        tick_array_one2,
        tick_array_two0,
        tick_array_two1,
        tick_array_two2,
        oracle_one,
        oracle_two,
        memo_program,
    }
);

accounts!(
    InitializeConfigExtensionAccounts,
    get_initialize_config_extension_accounts,
    {
        config,
        config_extension,
        funder,
        fee_authority,
        system_program,
    }
);

accounts!(
    SetConfigExtensionAuthorityAccounts,
    get_set_config_extension_authority_accounts,
    {
        whirlpools_config,
        whirlpools_config_extension,
        config_extension_authority,
        new_config_extension_authority,
    }
);

accounts!(
    SetTokenBadgeAuthorityAccounts,
    get_set_token_badge_authority_accounts,
    {
        whirlpools_config,
        whirlpools_config_extension,
        config_extension_authority,
        new_token_badge_authority,
    }
);

accounts!(
    InitializeTokenBadgeAccounts,
    get_initialize_token_badge_accounts,
    {
        whirlpools_config,
        whirlpools_config_extension,
        token_badge_authority,
        token_mint,
        token_badge,
        funder,
        system_program,
    }
);

accounts!(
    DeleteTokenBadgeAccounts,
    get_delete_token_badge_accounts,
    {
        whirlpools_config,
        whirlpools_config_extension,
        token_badge_authority,
        token_mint,
        token_badge,
        receiver,
    }
);
